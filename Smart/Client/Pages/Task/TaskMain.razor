@page "/task/{WorkItemId:int}"
@using System.Net.Http.Headers
@using Smart.Shared.DTOs.TaskDTO
@using Smart.Shared.Helpers.Enums
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@inject DialogService DialogService

<RadzenContent Container="main">
    <RadzenHeading Size="H2" Text="@workItem.Name" />
    <RadzenText TextStyle="TextStyle.Subtitle1">@workItem.Description</RadzenText>
        <RadzenText TextStyle="TextStyle.Body1">End Date: @workItem.EndDate.ToString("d")</RadzenText>
        <RadzenText TextStyle="TextStyle.Body1">Priority: @workItem.Priority</RadzenText>
        <RadzenText TextStyle="TextStyle.Body1">Assigned To: @workItem.AssignedUserId</RadzenText>

        <RadzenButton Text="Edit" Icon="edit" Click="@OpenEditDialog" />
        <RadzenButton Text="Delete" Icon="delete" Click="@DeleteWorkItem" />
    </RadzenContent>


    @code {
    [Parameter]
    public int WorkItemId { get; set; }

    private WorkItemInfoDTO workItem = new WorkItemInfoDTO();
    private bool editDialogOpen = false;
    private List<WorkItemPriority> priorities = Enum.GetValues(typeof(WorkItemPriority)).Cast<WorkItemPriority>().ToList();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            workItem = await HttpClient.GetFromJsonAsync<WorkItemInfoDTO>($"api/workitem/{WorkItemId}");


        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading work item: {ex.Message}");
        }
    }

    private void OpenEditDialog()
    {
        editDialogOpen = true;
        DialogService.Open<WorkItemEdit>($"Edit task", new Dictionary<string, object> { { "WorkItem", WorkItemId } });

    }

    private void CloseEditDialog()
    {
    }


    private async Task DeleteWorkItem()
    {
        try
        {
            var response = await HttpClient.DeleteAsync($"api/workitem/{WorkItemId}");
            if (response.IsSuccessStatusCode)
            {
                NavigationManager.NavigateTo($"/project/{workItem.ProjectId}");
            }
            else
            {
                Console.WriteLine("Error deleting work item");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error deleting work item: {ex.Message}");
        }
    }
}
